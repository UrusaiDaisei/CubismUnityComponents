---
description: Code style guidelines that must always be followed
globs: 
alwaysApply: true
---
# General code guidelines and best practices
- Codebase and technical documentations should alway be in english.
- Frontend UI can be in a different language or utilize any existing I8N frameworks.
- Check written files for proper spelling and grammar in the repo. Suggest changes as appropriate.
- Always prefer early function exiting. Avoid heavy closure nestings in functions/methods.
  - If a functions starts to get too large, split it into smaller functions.

# Function Size and Complexity Guidelines

- Functions should follow the Single Responsibility Principle (SRP)
- Keep functions under 60 lines of code whenever possible
- Functions should do one thing and do it well
- If a function has multiple logical sections, split it into separate functions
- Use descriptive function names that clearly indicate what the function does
- Avoid nested conditionals deeper than 2 levels - extract to helper functions instead
- When drawing or rendering UI elements, separate the logic into distinct drawing functions
- Prefer composition of small functions over large monolithic functions

## Code Review Checklist

- [ ] Are there any functions longer than 30 lines that could be split?
- [ ] Does each function have a single, clear responsibility?
- [ ] Are there nested conditionals that could be extracted into helper functions?
- [ ] Are there repeated code blocks that could be extracted into reusable functions?

# Formatting

- Use 4 spaces for indentation
- Maximum line length: 120 characters
- No trailing whitespace


